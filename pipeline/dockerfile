FROM public.ecr.aws/lambda/python:3.12

# Set lambda root as working directory
WORKDIR ${LAMBDA_TASK_ROOT}

# Install chrome dependencies
RUN dnf install -y atk cups-libs gtk3 libXcomposite alsa-lib \
    libXcursor libXdamage libXext libXi libXrandr libXScrnSaver \
    libXtst pango at-spi2-atk libXt xorg-x11-server-Xvfb \
    xorg-x11-xauth dbus-glib dbus-glib-devel nss mesa-libgbm jq unzip

# Run chrome installer script
RUN set -e \
 \
latest_stable_json="https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json" \
# Retrieve JSON data using curl
json_data=$(curl -s "$latest_stable_json") \
 \
latest_chrome_linux_download_url="$(echo "$json_data" | jq -r ".channels.Stable.downloads.chrome[0].url")" \
latest_chrome_driver_linux_download_url="$(echo "$json_data" | jq -r ".channels.Stable.downloads.chromedriver[0].url")" \
 \
download_path_chrome_linux="opt/chrome-headless-shell-linux.zip" \
download_path_chrome_driver_linux="opt/chrome-driver-linux.zip" \
 \
mkdir -p "/opt/chrome" \
curl -Lo $download_path_chrome_linux $latest_chrome_linux_download_url \
unzip -q $download_path_chrome_linux -d "/opt/chrome" \
rm -rf $download_path_chrome_linux \
 \
mkdir -p "/opt/chrome-driver" \
curl -Lo $download_path_chrome_driver_linux $latest_chrome_driver_linux_download_url \
unzip -q $download_path_chrome_driver_linux -d "/opt/chrome-driver" \
rm -rf $download_path_chrome_driver_linux

# Grab requirement file and install
COPY requirements.txt  .
RUN  pip3 install -r requirements.txt

# Copy everything else
COPY . .

CMD [ "etl.handler" ]
